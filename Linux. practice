# Linuxとは

業務用コンピューターに向いた基本ソフトウェア（OS）のことです。

## 主要な2つのディストリビューション
- **debian, ubuntuタイプ**
- **RedHat Linux, Fedora, CentOS, Amazon Linuxタイプ**

## Linuxシステムにおけるレベルとレイアー
下から順に説明します。

### 1. ハードウェア（システムの基盤）
- メモリー
- CPU
- デスク
- ネットワークインターフェイス

### 2. Linuxカーネル（OSの中核）
- メモリ上に存在するソフトウェア
- CPUに何をすべきか指示を出す
- ハードウェアを管理
- ハードウェアと実行中のプログラムの情報伝達薬として機能するイメージ

### 3. ユーザープロセス（システムの上位レベルにある領域）
- Linuxには以下の2種類のモードがあります：
  - **カーネルモード**（特殊な操作が必要）
  - **ユーザーモード**（通常の操作）

## Linuxにおけるユーザーとは
- プロセスを実行したり、ファイルを所有したりすることができる独立した存在です。
- 例：
  - `ec2-user`というユーザーがシステムに存在する場合、カーネルはユーザー名ではなく`userids`と呼ばれる数値でユーザーを識別します。
  - このユーザー名と`userids`の対応は、`passwd`というファイルで管理されています。

### システムユーザーについて
- 実際のユーザーだけでなく、多くの**システムユーザー**と呼ばれるものも存在します。
- 重要なのが**ルートユーザー**（**ルート**）です：
  - 他のユーザーのプロセスを管理し、システム上のどのファイルでも読み書きできる最強の権限を持っています。
  - スーパーユーザーとも呼ばれます。

## ユーザーをまとめる際のグループ
- **目的**：ファイルのアクセス権をグループ内のユーザーで共有できるようにすること。

## シェルとは？
- ユーザーが入力するコマンドを実行する役割を担うプログラムです。
  - 例：`cat`コマンドや`ls`コマンドを実行するためのプログラム
- ユーザーがLinuxシステムを操作するための窓口であり、操作を簡単にするための便利なツールです。
  - 例：`bash`、`ksh`、`csh`など。
- ユーザーのニーズや好みに合わせて、様々な機能や操作性を求め枝分かれしながら進化してきました。
- 起源は**ボーンシェル**というものからの派生です。


# Linux コマンド一覧(定番)

- **`ls`**: ディレクトリの内容を表示
- **`cd`**: ディレクトリの移動
- **`pwd`**: 現在のディレクトリを表示
- **`mkdir`**: 新しいディレクトリを作成
- **`rm`**: ファイルやディレクトリを削除
- **`cp`**: ファイルをコピーする
- **`mv`**: ファイルを移動またはリネームする
- **`touch`**: 空のファイルを作成
- **`cat`**: ファイルの中身を表示
- **`less`**: 長いファイルの中身をページ送りで表示
- **`echo`**: テキストや変数を表示
- **`man`**: コマンドのマニュアルを表示
- **`chmod`**: パーミッションを変更する
- **`chown`**: 所有者を変更する
- **`ps`**: 実行中のプロセスを表示
- **`kill`**: プロセスを終了させる
- **`grep`**: 特定の文字列を検索する
- **`find`**: ファイルやディレクトリを検索する
- **`df`**: ディスク使用状況を表示する
- **`top`**: リアルタイムでプロセスの状況を表示する

# パーミッション

例: `-rwxr-xr-x 1 root root`

### 各部分の説明

1. **`-`**: ファイルの種類
2. **`rwx`**: 所有者（ユーザー）の権限設定
3. **`r-x`**: 同じグループに所属しているユーザーの権限設定
4. **`r-x`**: その他のユーザーの権限設定
5. **`1`**: ファイルがリンクされている数
6. **`root`**: ファイルの所有者（ユーザー名）
7. **`root`**: ファイルの所有グループ（グループ名）

### 権限の詳細

- **`r`**: Read（読み取り権限）
- **`w`**: Write（書き込み権限）
- **`x`**: Execute（実行権限）
- **`-`**: 権限無し

### フル権限の状態

- **`-rwxrwxrwx`**: すべてのユーザーにフル権限が与えられている状態
  - 数字で表すと **`chmod 777 ファイル名`** と書けます。
  - **`-777`**: すべての権限が設定されている

### 二進数で権限を設定

- 権限変更は、2進数でフラグを立てるという考え方に基づいています。

### よく見るパターン

- **`rwxr-xr-x`**: **755** (所有者にフル権限、グループとその他のユーザーに実行権限)
- **`rw-r--r--`**: **644** (所有者に読み書き権限、グループとその他のユーザーに読み取り権限)
- **`r-------`**: **400** (所有者に読み取り権限、他のユーザーに権限なし)


# `sudo` コマンドオプション一覧

- **`-A`**: パスワード入力用のコマンドを使用する（コマンドは「/etc/sudo.conf」または環境変数「SUDO_ASKPASS」で設定）
- **`-n`**: パスワードを要求するプロンプトを表示しない（パスワード入力が必要なコマンドの場合はエラーとなって実行できない）
- **`-p 文字列`**: パスワード入力時のプロンプトを指定する（デフォルトは「:」記号）
- **`-S`**: パスワードを端末ではなく標準入力から読み込む（パスワードの末尾には改行が必要）
- **`-k`**: 保存されている認証情報を無効にする（次回のsudo実行時には必ずパスワード入力が必要）。コマンドと一緒に使用可能
- **`-K`**: 保存されている認証情報を完全に消去する
- **`-V`**: 保存された認証情報を更新する
- **`-u ユーザー`**: コマンドを実行するときのユーザーを「ユーザー名」または「ユーザーID（#記号と数字）」で指定する
- **`-g グループ`**: コマンドを実行するときのグループを「グループ名」または「グループID（#記号と数字）」で指定する
- **`-P`**: sudoを実行するユーザーが所属するグループのままコマンドを実行する

- **`-b`**: 指定したコマンドをバックグラウンドで実行する
- **`-e`**: 指定したファイルを編集する（コマンドは「sudoedit」を使用する）
- **`-E`**: 現在の環境変数を保持してコマンドを実行する
- **`-H`**: 環境変数「HOME」をrootユーザーのホームディレクトリに変更してコマンドを実行する
- **`-s`**: 環境変数「SHELL」で指定されたシェル、またはrootユーザーのシェルを実行する。コマンドを指定しなかった場合は対話シェルとなる
- **`-i`**: rootユーザーのデフォルトのシェルをログインシェルとして実行する。コマンドを指定しなかった場合は対話シェルとなる
- **`-l`**: sudoを実行するユーザーに許可されているコマンドを一覧表示する。「sudo -l コマンド」のようにコマンドを指定した場合、コマンドが許可されていればコマンドの絶対パスを表示する
- **`-ll`**: 「-l」オプションと同様だが、長い形式で表示する
- **`-U ユーザー`**: 「-l」オプションと組み合わせて使用し、指定したユーザーの権限で実行できるコマンドを一覧表示する

使う時もあるコマンド